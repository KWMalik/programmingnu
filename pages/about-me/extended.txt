
Most of my professional experience has been in electronic design automation (EDA). 
I have a Ph.D. from the University of Michigan where I worked on algorithms for performance analysis of digital circuits.
In the mid 1990's, I worked for IBM at the Somerset Design Center in Austin, writing performance analysis tools for PowerPC microprocessor designs.
From 1997 until 2004, I was with Magma Design Automation, where I wrote the incremental static timing analysis engine that powered our fully-integrated Verilog-to-GDSII chip implementation system.  Others had tried it before, but ours was the first commercially-successful project that put the entire design flow into a single integrated application.  While I was at Magma, the company grew from a dozen employees to over 600 and enjoyed a successful IPO in 2001.  As our company grew, I gradually moved from technical to managerial roles, thinking that many of the growth pains we were feeling could be resolved by better management.  Now in hindsight, I think that many of those pains weren't caused so much by management but by the ways we had constructed our product.

In 2004, I left Magma to spend more time focusing on software technology, especially wanting to see how things were done in other software businesses.  I also worked briefly for a venture-funded EDA startup, but quickly realized that the kinds of problems I wanted to solve would take too much time to address with venture funding, and that maybe I was the only person crazy enough to support the kinds of investigation that I wanted to do.  So in the beginning of 2005, I set up shop and started down the path that produced Nu.

I think that some of the biggest problems faced by the EDA and many other software industries are technical problems, and that they are the problems that people have when they lose - or never gain - control of the software that they are using. Nu is one step toward solving those problems.

Want to know more?  Visit [blog.neontology.com](http://blog.neontology.com).
